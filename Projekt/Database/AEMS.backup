--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.3
-- Dumped by pg_dump version 9.5.3

-- Started on 2017-07-28 12:12:13

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 11 (class 2615 OID 36355)
-- Name: aems; Type: SCHEMA; Schema: -; Owner: aems
--

CREATE SCHEMA aems;


ALTER SCHEMA aems OWNER TO aems;

SET search_path = aems, pg_catalog;

--
-- TOC entry 259 (class 1255 OID 37177)
-- Name: compute(numeric, numeric, numeric); Type: FUNCTION; Schema: aems; Owner: postgres
--

CREATE FUNCTION compute(numeric, numeric, numeric) RETURNS numeric
    LANGUAGE java
    AS $$at.htlgkr.aems.util.key.DiffieHellmanProcedure.compute$$;


ALTER FUNCTION aems.compute(numeric, numeric, numeric) OWNER TO postgres;

--
-- TOC entry 248 (class 1255 OID 36396)
-- Name: delete_user(character varying); Type: FUNCTION; Schema: aems; Owner: aems
--

CREATE FUNCTION delete_user(p_username character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
declare

	row_count_before integer;
	row_count_after integer;

begin
	
	select count(*) into row_count_before
	from aems."Users";

	delete from aems."Users"
	where username = p_username;

	select count(*) into row_count_after
	from aems."Users";

	if row_count_before > row_count_after then
		return true;
	else
		return false;
	end if;
end;
$$;


ALTER FUNCTION aems.delete_user(p_username character varying) OWNER TO aems;

--
-- TOC entry 260 (class 1255 OID 36839)
-- Name: get_transfer_infos(); Type: FUNCTION; Schema: aems; Owner: postgres
--

CREATE FUNCTION get_transfer_infos() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare

	json varchar(200);
	secret_number decimal(3, 0);
	mod_number decimal(100, 0);
	base_number decimal(2, 0);
	combination decimal(30, 0);

begin

	json := '{ ';

	-- generate base factor

	select random() * 9 + 11 into base_number;
	json := json || 'base:' || base_number;

	-- generate modulus

	select random() * (random() * 81657531897453431354687831513154354546878645513213245) into mod_number;
	json := json || ', mod:' || mod_number;

	-- generate secret number

	select random() * 9 + 4 into secret_number;
	select aems.compute(base_number, mod_number, secret_number) into combination;

	json := json || ', combination:' || combination || ' }';


	delete from aems."TransferInfos"; -- erase priorly specified data
	insert into aems."TransferInfos" (id, secret_number, mod_number) -- store the secret and modulus number into "TransferInfos"
	values (0, secret_number, mod_number);

	-- return info
	return json;
end;

$$;


ALTER FUNCTION aems.get_transfer_infos() OWNER TO postgres;

--
-- TOC entry 265 (class 1255 OID 37185)
-- Name: get_user_infos(); Type: FUNCTION; Schema: aems; Owner: postgres
--

CREATE FUNCTION get_user_infos() RETURNS bytea
    LANGUAGE plpgsql
    AS $$
declare
	decrypted_password_bytes bytea;
	aes_key varchar(48);
	aes_key_bytes bytea;
	user_password_bytes bytea;
	decrypted_password varchar(32);

	datafile text default 'key.txt';

	user_record record;
	json varchar(500000) default '';
begin
	aes_key := pg_read_file(datafile, 0, 16);
	aes_key_bytes := convert_to(aes_key, 'UTF-8');

	json := '[ ';
	for user_record in (select username, "password"
			    from aems."Users") loop
	        decrypted_password_bytes := aems.request_decryption(aes_key_bytes, user_record."password");
		decrypted_password := convert_from(decrypted_password_bytes, 'UTF-8');

		raise notice 'is: %' ,decrypted_password;

		json := json || '{ username:"' || user_record."username" || '", password:"' || decrypted_password || '" }, ';
	end loop;
	select substr(json, 0, char_length(json) - 1) into json;
	json := json || ' ]';


	select convert_to("key", 'UTF-8') into aes_key_bytes
	from aems."TransferInfos"
	where id = 0;

	return aems.request_encryption(aes_key_bytes, convert_to(json, 'UTF-8'));
end;
$$;


ALTER FUNCTION aems.get_user_infos() OWNER TO postgres;

--
-- TOC entry 264 (class 1255 OID 36398)
-- Name: register_user(character varying, character varying); Type: FUNCTION; Schema: aems; Owner: aems
--

CREATE FUNCTION register_user(username character varying, clear_text_password character varying) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
declare
	pass_bytes bytea;
	decrypted_text varchar(4096);
	encrypted_pass_bytes bytea;
	aes_key varchar(48);
	aes_key_bytes bytea;

	datafile text default 'key.txt';

	row_count_before integer;
	row_count_after integer;
begin
	-- aquire the key from the key file ; preliminarily located within the data directory at serverside
	-- key file must be relocated in the future!!!
	aes_key := pg_read_file(datafile, 0, 16);

	pass_bytes := convert_to(clear_text_password, 'UTF-8');
	aes_key_bytes := convert_to(aes_key, 'UTF-8');
	encrypted_pass_bytes := aems.request_encryption(aes_key_bytes, pass_bytes);

	select count(*) into row_count_before
	from aems."Users";

	insert into aems."Users" (id, username, "password")
	values (nextval('aems.user_seq'), username, encrypted_pass_bytes);

	select count(*) into row_count_after
	from aems."Users";

	if row_count_before < row_count_after then
		return true;
	else
		return false;
	end if;

exception
	when others then
		return false;	
end;
$$;


ALTER FUNCTION aems.register_user(username character varying, clear_text_password character varying) OWNER TO aems;

--
-- TOC entry 262 (class 1255 OID 37189)
-- Name: request_decryption(bytea, bytea); Type: FUNCTION; Schema: aems; Owner: postgres
--

CREATE FUNCTION request_decryption(bytea, bytea) RETURNS bytea
    LANGUAGE java
    AS $$at.htlgkr.aems.util.crypto.Decrypter.requestDecryption$$;


ALTER FUNCTION aems.request_decryption(bytea, bytea) OWNER TO postgres;

--
-- TOC entry 263 (class 1255 OID 37190)
-- Name: request_encryption(bytea, bytea); Type: FUNCTION; Schema: aems; Owner: postgres
--

CREATE FUNCTION request_encryption(bytea, bytea) RETURNS bytea
    LANGUAGE java
    AS $$at.htlgkr.aems.util.crypto.Encrypter.requestEncryption$$;


ALTER FUNCTION aems.request_encryption(bytea, bytea) OWNER TO postgres;

--
-- TOC entry 266 (class 1255 OID 37192)
-- Name: verify_transfer_infos(numeric); Type: FUNCTION; Schema: aems; Owner: postgres
--

CREATE FUNCTION verify_transfer_infos(combination numeric) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare

	akey decimal(400, 0);
	varchar_key varchar(500);

begin

	select aems.compute(combination, mod_number, secret_number) into akey
	from aems."TransferInfos"
	where id = 0;

	SELECT CAST(akey AS varchar(500)) into varchar_key;	
	select substr(varchar_key, 1, 16) into varchar_key;
	

	update aems."TransferInfos" -- store the key into "TransferInfos"
	set "key" = varchar_key
	where id = 0;
end;

$$;


ALTER FUNCTION aems.verify_transfer_infos(combination numeric) OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- TOC entry 190 (class 1259 OID 36497)
-- Name: MeterData; Type: TABLE; Schema: aems; Owner: aems
--

CREATE TABLE "MeterData" (
    id numeric(10,0) NOT NULL,
    meter character varying(150),
    "timestamp" timestamp without time zone NOT NULL,
    measured_value numeric(7,5) NOT NULL
);


ALTER TABLE "MeterData" OWNER TO aems;

--
-- TOC entry 185 (class 1259 OID 36356)
-- Name: MeterTypes; Type: TABLE; Schema: aems; Owner: aems
--

CREATE TABLE "MeterTypes" (
    id numeric(10,0) NOT NULL,
    display_name character varying(100) NOT NULL
);


ALTER TABLE "MeterTypes" OWNER TO aems;

--
-- TOC entry 187 (class 1259 OID 36371)
-- Name: Meters; Type: TABLE; Schema: aems; Owner: aems
--

CREATE TABLE "Meters" (
    id character varying(150) NOT NULL,
    metertype numeric(10,0),
    "user" numeric(10,0),
    city character varying(50),
    latitude numeric(10,10),
    longitude numeric(10,10)
);


ALTER TABLE "Meters" OWNER TO aems;

--
-- TOC entry 191 (class 1259 OID 36844)
-- Name: TransferInfos; Type: TABLE; Schema: aems; Owner: aems
--

CREATE TABLE "TransferInfos" (
    id numeric(10,0) NOT NULL,
    secret_number numeric(3,0) NOT NULL,
    key character varying(16),
    mod_number numeric(100,0)
);


ALTER TABLE "TransferInfos" OWNER TO aems;

--
-- TOC entry 186 (class 1259 OID 36361)
-- Name: Users; Type: TABLE; Schema: aems; Owner: aems
--

CREATE TABLE "Users" (
    id numeric(10,0) NOT NULL,
    username character varying(32) NOT NULL,
    password bytea
);


ALTER TABLE "Users" OWNER TO aems;

--
-- TOC entry 189 (class 1259 OID 36406)
-- Name: WeatherData; Type: TABLE; Schema: aems; Owner: aems
--

CREATE TABLE "WeatherData" (
    id numeric(10,0) NOT NULL,
    meter character varying(150) NOT NULL,
    "timestamp" timestamp without time zone,
    temperature numeric(2,2),
    humidity numeric(3,2)
);


ALTER TABLE "WeatherData" OWNER TO aems;

--
-- TOC entry 188 (class 1259 OID 36399)
-- Name: user_seq; Type: SEQUENCE; Schema: aems; Owner: aems
--

CREATE SEQUENCE user_seq
    START WITH 15
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 5;


ALTER TABLE user_seq OWNER TO aems;

--
-- TOC entry 2223 (class 0 OID 36497)
-- Dependencies: 190
-- Data for Name: MeterData; Type: TABLE DATA; Schema: aems; Owner: aems
--

COPY "MeterData" (id, meter, "timestamp", measured_value) FROM stdin;
\.


--
-- TOC entry 2218 (class 0 OID 36356)
-- Dependencies: 185
-- Data for Name: MeterTypes; Type: TABLE DATA; Schema: aems; Owner: aems
--

COPY "MeterTypes" (id, display_name) FROM stdin;
5	test
\.


--
-- TOC entry 2220 (class 0 OID 36371)
-- Dependencies: 187
-- Data for Name: Meters; Type: TABLE DATA; Schema: aems; Owner: aems
--

COPY "Meters" (id, metertype, "user", city, latitude, longitude) FROM stdin;
\.


--
-- TOC entry 2224 (class 0 OID 36844)
-- Dependencies: 191
-- Data for Name: TransferInfos; Type: TABLE DATA; Schema: aems; Owner: aems
--

COPY "TransferInfos" (id, secret_number, key, mod_number) FROM stdin;
0	7	2004718153237626	34639765173498300000000000000000000000000000000000000
\.


--
-- TOC entry 2219 (class 0 OID 36361)
-- Dependencies: 186
-- Data for Name: Users; Type: TABLE DATA; Schema: aems; Owner: aems
--

COPY "Users" (id, username, password) FROM stdin;
185	x	\\x0e8fbf4bc734cf8dba070f433eced060
\.


--
-- TOC entry 2222 (class 0 OID 36406)
-- Dependencies: 189
-- Data for Name: WeatherData; Type: TABLE DATA; Schema: aems; Owner: aems
--

COPY "WeatherData" (id, meter, "timestamp", temperature, humidity) FROM stdin;
\.


--
-- TOC entry 2236 (class 0 OID 0)
-- Dependencies: 188
-- Name: user_seq; Type: SEQUENCE SET; Schema: aems; Owner: aems
--

SELECT pg_catalog.setval('user_seq', 189, true);


--
-- TOC entry 2097 (class 2606 OID 36501)
-- Name: pk_meterdata; Type: CONSTRAINT; Schema: aems; Owner: aems
--

ALTER TABLE ONLY "MeterData"
    ADD CONSTRAINT pk_meterdata PRIMARY KEY (id);


--
-- TOC entry 2093 (class 2606 OID 36375)
-- Name: pk_meters; Type: CONSTRAINT; Schema: aems; Owner: aems
--

ALTER TABLE ONLY "Meters"
    ADD CONSTRAINT pk_meters PRIMARY KEY (id);


--
-- TOC entry 2087 (class 2606 OID 36360)
-- Name: pk_metertypes; Type: CONSTRAINT; Schema: aems; Owner: aems
--

ALTER TABLE ONLY "MeterTypes"
    ADD CONSTRAINT pk_metertypes PRIMARY KEY (id);


--
-- TOC entry 2099 (class 2606 OID 36848)
-- Name: pk_transfer_infos; Type: CONSTRAINT; Schema: aems; Owner: aems
--

ALTER TABLE ONLY "TransferInfos"
    ADD CONSTRAINT pk_transfer_infos PRIMARY KEY (id);


--
-- TOC entry 2089 (class 2606 OID 36368)
-- Name: pk_users; Type: CONSTRAINT; Schema: aems; Owner: aems
--

ALTER TABLE ONLY "Users"
    ADD CONSTRAINT pk_users PRIMARY KEY (id);


--
-- TOC entry 2095 (class 2606 OID 36410)
-- Name: pk_weatherdata; Type: CONSTRAINT; Schema: aems; Owner: aems
--

ALTER TABLE ONLY "WeatherData"
    ADD CONSTRAINT pk_weatherdata PRIMARY KEY (id);


--
-- TOC entry 2091 (class 2606 OID 36370)
-- Name: users_username_key; Type: CONSTRAINT; Schema: aems; Owner: aems
--

ALTER TABLE ONLY "Users"
    ADD CONSTRAINT users_username_key UNIQUE (username);


--
-- TOC entry 2103 (class 2606 OID 36502)
-- Name: fk_meterdata_meters; Type: FK CONSTRAINT; Schema: aems; Owner: aems
--

ALTER TABLE ONLY "MeterData"
    ADD CONSTRAINT fk_meterdata_meters FOREIGN KEY (meter) REFERENCES "Meters"(id);


--
-- TOC entry 2100 (class 2606 OID 36376)
-- Name: fk_meters_metertypes; Type: FK CONSTRAINT; Schema: aems; Owner: aems
--

ALTER TABLE ONLY "Meters"
    ADD CONSTRAINT fk_meters_metertypes FOREIGN KEY (metertype) REFERENCES "MeterTypes"(id);


--
-- TOC entry 2101 (class 2606 OID 36381)
-- Name: fk_meters_users; Type: FK CONSTRAINT; Schema: aems; Owner: aems
--

ALTER TABLE ONLY "Meters"
    ADD CONSTRAINT fk_meters_users FOREIGN KEY ("user") REFERENCES "Users"(id);


--
-- TOC entry 2102 (class 2606 OID 36411)
-- Name: fk_weatherdata_meters; Type: FK CONSTRAINT; Schema: aems; Owner: aems
--

ALTER TABLE ONLY "WeatherData"
    ADD CONSTRAINT fk_weatherdata_meters FOREIGN KEY (meter) REFERENCES "Meters"(id);


--
-- TOC entry 2229 (class 0 OID 0)
-- Dependencies: 11
-- Name: aems; Type: ACL; Schema: -; Owner: aems
--

REVOKE ALL ON SCHEMA aems FROM PUBLIC;
REVOKE ALL ON SCHEMA aems FROM aems;
GRANT ALL ON SCHEMA aems TO aems;
GRANT ALL ON SCHEMA aems TO postgres;


--
-- TOC entry 2230 (class 0 OID 0)
-- Dependencies: 248
-- Name: delete_user(character varying); Type: ACL; Schema: aems; Owner: aems
--

REVOKE ALL ON FUNCTION delete_user(p_username character varying) FROM PUBLIC;
REVOKE ALL ON FUNCTION delete_user(p_username character varying) FROM aems;
GRANT ALL ON FUNCTION delete_user(p_username character varying) TO aems;
GRANT ALL ON FUNCTION delete_user(p_username character varying) TO PUBLIC;


--
-- TOC entry 2231 (class 0 OID 0)
-- Dependencies: 264
-- Name: register_user(character varying, character varying); Type: ACL; Schema: aems; Owner: aems
--

REVOKE ALL ON FUNCTION register_user(username character varying, clear_text_password character varying) FROM PUBLIC;
REVOKE ALL ON FUNCTION register_user(username character varying, clear_text_password character varying) FROM aems;
GRANT ALL ON FUNCTION register_user(username character varying, clear_text_password character varying) TO aems;
GRANT ALL ON FUNCTION register_user(username character varying, clear_text_password character varying) TO PUBLIC;


--
-- TOC entry 2232 (class 0 OID 0)
-- Dependencies: 185
-- Name: MeterTypes; Type: ACL; Schema: aems; Owner: aems
--

REVOKE ALL ON TABLE "MeterTypes" FROM PUBLIC;
REVOKE ALL ON TABLE "MeterTypes" FROM aems;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE "MeterTypes" TO aems;


--
-- TOC entry 2233 (class 0 OID 0)
-- Dependencies: 187
-- Name: Meters; Type: ACL; Schema: aems; Owner: aems
--

REVOKE ALL ON TABLE "Meters" FROM PUBLIC;
REVOKE ALL ON TABLE "Meters" FROM aems;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE "Meters" TO aems;


--
-- TOC entry 2234 (class 0 OID 0)
-- Dependencies: 186
-- Name: Users; Type: ACL; Schema: aems; Owner: aems
--

REVOKE ALL ON TABLE "Users" FROM PUBLIC;
REVOKE ALL ON TABLE "Users" FROM aems;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE "Users" TO aems;


--
-- TOC entry 2235 (class 0 OID 0)
-- Dependencies: 188
-- Name: user_seq; Type: ACL; Schema: aems; Owner: aems
--

REVOKE ALL ON SEQUENCE user_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE user_seq FROM aems;
GRANT ALL ON SEQUENCE user_seq TO aems;


-- Completed on 2017-07-28 12:12:13

--
-- PostgreSQL database dump complete
--

